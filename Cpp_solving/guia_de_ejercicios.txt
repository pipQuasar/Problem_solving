Temas del Módulo I
I. Asignaciones: Operaciones de Entrada y Salida. Asignación. Expresiones aritméticas. Operadores
aritméticos. Tipos de datos Numéricos enteros y reales.
II. Análisis de caso: Selección Simple. Expresiones lógicas. Operadores de relación. Operadores lógicos.
Estructuras anidadas.
III. Repeticiones: Repetición definida o exacta. Repetición indefinida Pre-condición. Repetición indefinida
Post-condición Estructuras anidadas.
IV. Máximos y Mínimos.
V. Ejercicios Integradores
VI. Subprogramas. Subprogramas estándar. Funciones y procedimientos desarrollados por el usuario.
Parámetros por valor y por referencia. Argumentos. Invocaciones.
VII. Ejercicios Integradores Subprogramas
I. Asignaciones:
Recuerden asignar es dar valor a cierta dirección de memoria o extraer el valor para mostrarlo. La asignación
puede ser:
1. Interna Identificador ← Expresión;
2. Externa (a través de un dispositivo externo
a. De entrada Leer(identificador);
b. De salida Imprimir(“Literal”, Identificador);

Ej. MI-1 Dados dos valores enteros A y B, informar la suma, la resta y el producto.
Ej. MI-2: Dada una terna de números naturales que representan al día, al mes y al año de una determinada
fecha informarla como un solo número natural de 8 dígitos con la forma (AAAAMMDD).
Ej. MI-3: Dada un número entero de la forma (AAAAMMDD), que representa una fecha valida mostrar el dia, mes y
año que representa.
Ej. MI-4: A partir de un valor entero ingresado por teclado, se pide informar:
a) La quinta parte de dicho valor
b) El resto de la división por 5
c) La séptima parte del resultado del punto a)
II. Análisis de caso:
Recuerde analizar caso supone decidir entre dos o más alternativas. Los casos deben definirse sin
ambigüedades y deben ser mutuamente excluyentes. Pueden ser:
1. Simples: evalúan expresiones lógicas
a. Completos
b. Incompletos
2. Múltiples: evalúan ordinales
a. Completos
b. incompletos

Ej. MI-5
Dados dos valores enteros y distintos, emitir una leyenda apropiada que informe cuál es el mayor entre ellos.
Ej. MI-6 Dadas dos fechas informar cual es la más reciente. Determine cuáles serían los datos de entrada y las leyendas
a informar de acuerdo al proceso solicitado.
Ej. MI-7: Dado tres valores determinar e imprimir una leyenda según sea: “Forman triangulo” o “No forman triángulo”.
Ej. MI-8: Dado un triángulo representado por sus lados L1, L2, L3, determinar e imprimir una leyenda según sea:
equilátero, isósceles o escalenos.
Ej. MI-9: Dados un mes y el año correspondiente informar cuántos días tiene el mes.
Ej. MI-11 Se ingresa una edad, mostrar por pantalla alguna de las siguientes leyendas:
❖ ‘menor’ si la edad es menor o igual a 12
❖ ‘cadete’ si la edad está comprendida entre 13 y 18
❖ ‘juvenil’ si la edad es mayor que 18 y no supera los 26
❖ ‘mayor’ en el caso que no cumpla ninguna de las condiciones anteriores
III. Repeticiones
Recuerden que los lenguajes de programación proveen estructuras que permiten repetir un bloque de
instrucciones una cantidad definida de veces. Las repeticiones pueden ser:
1. Exactas
a. Según un valor constante
b. Según una cantidad conocida a priori
2. No Exacta
a. Pre Condicional (0..N)
b. Pos Condicional (1..N)

Ej. MI-12 Informar los primeros 100 números naturales y su sumatoria
Ej. MI-13: Dados N y M números naturales, informar su producto por sumas sucesivas.
Ej. MI-14: Dados 50 números enteros, informar el promedio de los mayores que 100 y la suma de los menores que
–10.
Ej. MI-15: Se realiza una inspección en una fábrica de pinturas, y se detectaron 20 infracciones. De cada infracción se
tomó nota de los siguientes datos:
- Tipo de Infracción (1, 2, 3, ó 4)
- Motivo de la infracción
- Valor de la multa
- Gravedad de la infracción (‘L’,‘M’, ‘G’)
Se pide informar al final del proceso:
• Los valores totales de la multa a pagar de acuerdo al tipo de gravedad.
• La leyenda “Clausurar fábrica” si la cantidad de infracciones 3 y 4 con gravedad “G” sean mayor a 3.
Ej. MI-16: Ingresar e informar valores, mientras que el valor ingresado no sea negativo. Informar la cantidad de valores
ingresados.
Ej. MI-17: Se ingresa un conjunto de valores float, cada uno de los cuales representan el sueldo de un empleado,
excepto el último valor que es cero e indica el fin del conjunto. Se pide desarrollar un programa que determine e informe:
a) Cuántos empleados ganan menos $1.520.
b) Cuántos ganan $1.520 o más pero menos de $2.780.
c) Cuántos ganan $2.780 o más pero menos de $5.999.
d) Cuántos ganan $5.999 o más.
Ej. MI-18: Dado un valor M determinar y emitir un listado con los M primeros múltiplos de 3 que no lo sean de 5,
dentro del conjunto de los números naturales.
Ej. MI-19: Reescribir los algoritmos MI-16 al MI-18, utilizando ciclos 1-n
Ej. MI-20: Dados 10 valores informar el mayor
Ej. MI-21: Dados N valores informar el mayor, el menor y en qué posición del conjunto fueron ingresados.
Ej. MI-22: Dado un conjunto de Nombres y Fechas de nacimientos (AAAAMMDD), que finaliza con un Nombre =
‘FIN’, informar el nombre de la persona con mayor edad y el de la más joven.
Ej. MI-23. Dado un conjunto de valores, que finaliza con un valor nulo, determinar e imprimir (si hubo valores):
a) El valor máximo negativo
b) El valor mínimo positivo
c) El valor mínimo dentro del rango -17.3 y 26.9
d) El promedio de todos los valores.
Ej. MI-24: Se dispone de un lote de valores enteros positivos que finaliza con un número negativo.
El lote está dividido en sublotes por medio de valores cero. Desarrollar un programa que determine e informe:
a) por cada sublote el promedio de valores
b) el total de sublotes procesados
c) el valor máximo del conjunto, indicando en que sublote se encontró y la posición relativa del mismo dentro
del sublote
d) valor mínimo de cada sublote
Nota: el lote puede estar vacío (primer valor negativo), o puede haber uno, varios o todos los sublotes vacíos (ceros
consecutivos)
Ej. MI-25: Dada una serie de M pares {color, número} que corresponden a los tiros de una ruleta. Se pide informar:
a) cuántas veces salió el número cero y el número anterior a cada cero
b) cuántas veces seguidas llegó a repetirse el color negro
c) cuántas veces seguidas llegó a repetirse el mismo número y cuál fue
d) el mayor número de veces seguidas que salieron alternados el rojo y el negro
e) el mayor número de veces seguidas que se negó la segunda docenas
IV Ejercicios Integradores
Ej. MI-26: Un buque de carga traslada 100 contenedores a tres diferentes puertos del país.
Los puertos se identifican con los números 1, 2 y 3.
De cada contenedor que el buque traslade se registran los siguientes datos:
- Identificación del contenedor
- Peso del contenedor en kg
- Puerto de arribo (un valor de 1 a 3).
Se pide calcular e informar:
1) El peso total que el buque debe trasladar
2) La identificación del contenedor de mayor peso
3) La cantidad de contenedores que debe trasladar a cada puerto
Ej. MI-27: En un torneo de fútbol participan K equipos. El torneo se juega con el sistema de todos contra todos. Por
cada partido disputado por un equipo se dispone de la siguiente información:
a) Nro. de equipo,
b) Código del resultado ('P'= Perdido, 'E'= Empatado, 'G'= Ganado).
Se arma un lote de datos con todos los resultados del torneo, agrupados por Nro. de equipo.
Desarrollar el programa que imprima:
Por cada equipo, su número y el puntaje total que obtuvo (suma 3 si gana, y 1 si empata).
Ej. MI-28: Dada una serie de caracteres que conforman una oración, donde cada palabra está separada de la siguiente
por un carácter blanco y la oración finaliza con un punto. Se pide informar:
a) cantidad de veces que apareció cada vocal
b) cantidad de palabras que contiene la oración
c) cantidad de letras que posee la palabra más larga.
Ej. MI-29: Dado un número entero positivo entre 1 y 3999 informar su correspondiente número Romano
Ej. MI-30: Dado un conjunto de valores enteros, calcular e informar a) cuántos valores cero hubo, b) promedio de
valores positivos, c) sumatoria de valores negativos.
Resolver el ejercicio para los siguientes lotes de datos:
1) 167 valores enteros
2) N valores, donde el valor de N debe ser leído previamente
3) El conjunto de valores termina con un valor igual al anterior
4) Se dan N valores, pero el proceso deberá finalizar si se procesan todos los valores o si la cantidad de ceros
supera a cuatro
5) Se dan N valores, pero el proceso deberá finalizar si se cumple alguna de las condiciones de 4) o si el
promedio de positivos resulta mayor que seis.
